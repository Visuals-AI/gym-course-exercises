#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author : EXP
# @Time   : 2024/03/23 13:52
# -----------------------------------------------

from utils.terminate import TerminateDetector


def adjust(obs, action, reward, td: TerminateDetector, step) :
    '''
    奖励重塑。
    :params: obs 当前智能体处于的状态
    :params: action 当前智能体准备执行的动作
    :params: reward 执行当前 action 后、智能体当前步获得的奖励
    :params: td 终止计算器
    :params: step 当前步数
    :return: 重塑后的 (reward, min_x, max_x)
    '''
    terminated = False

    # action :
    # 右腿关节1的扭矩：控制右腿上部关节的旋转力矩，负值代表一个方向，正值代表相反方向。
    # 右腿关节2的扭矩：控制右腿下部关节的旋转力矩。
    # 左腿关节1的扭矩：控制左腿上部关节的旋转力矩。
    # 左腿关节2的扭矩：控制左腿下部关节的旋转力矩。

    # obs: 
    # 1. 机器人主体的水平速度：沿x轴的速度。
    # 2. 机器人主体的垂直速度：沿y轴的速度。
    # 3. 机器人的角速度：主体围绕中心点的旋转速率。
    # 4. 机器人的角度：主体相对于水平面的角度。
    # 5. 右腿关节1的角度。
    # 6. 右腿关节1的角速度。
    # 7. 右腿关节1是否接触地面：1表示接触，0表示未接触。
    # 8. 右腿关节2的角度。
    # 9. 右腿关节2的角速度。
    # 10. 右腿关节2是否接触地面：同样，1表示接触，0表示未接触。
    # 11. 左腿关节1的角度。
    # 12. 左腿关节1的角速度。
    # 13. 左腿关节1是否接触地面。
    # 14. 左腿关节2的角度。
    # 15. 左腿关节2的角速度。
    # 17. 左腿关节2是否接触地面。

    # 接下来的8个状态为地形信息，通常用于表示智能体所在位置的地形特征，这在许多版本的BipedalWalker环境中是通用的：
    # 17. 到最近的地面的水平距离。
    # 18-24. 前方地形的7个连续点的高度：这些点代表智能体前方地形的高度，帮助智能体“看到”前面的地形，从而做出更好的行走决策。

    return (reward, terminated)

